{"version":3,"sources":["components/Toggleable.js","components/Blog.js","components/LoginForm.js","components/Notification.js","components/NewBlogForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Toggleable","React","forwardRef","props","ref","useState","visible","setVisible","displayShow","display","displayHide","toggleVisible","useImperativeHandle","style","onClick","showLabel","children","hideLabel","displayName","paddingTop","paddingLeft","border","borderWidth","marginBottom","Blog","blog","addLike","title","author","url","likes","Blogs","blogs","map","key","id","LoginForm","handleLogin","username","setUsername","password","setPassword","loginSubmit","event","a","preventDefault","onSubmit","type","value","name","onChange","target","Notification","message","error","background","fontSize","borderStyle","borderRadius","padding","NewBlogForm","handleNewForm","setTitle","setUrl","setAuthor","addNewForm","newBlog","token","getAll","axios","get","then","response","data","setToken","newToken","create","config","headers","Authorization","post","like","user","put","login","credentials","App","setBlogs","setUser","setMessage","setError","newBlogRef","createRef","getBlogs","blogService","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","setNotification","setTimeout","loginService","loggedUser","setItem","stringify","console","logout","removeItem","current","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.311d660f.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggleable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const displayShow = { display : visible ? '' : 'none' }\r\n    const displayHide = { display : visible ? 'none' : '' }\r\n\r\n    const toggleVisible = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisible\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={ displayHide }>\r\n                <button onClick={ toggleVisible }>{ props.showLabel }</button>\r\n            </div>\r\n            <div style={ displayShow }>\r\n                { props.children }\r\n                <button onClick={ toggleVisible }>{ props.hideLabel }</button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nToggleable.propTypes = {\r\n    showLabel: PropTypes.string.isRequired,\r\n    hideLabel: PropTypes.string.isRequired\r\n}\r\n\r\nToggleable.displayName = 'Toggleable'\r\n\r\nexport default Toggleable","import React from 'react'\r\nimport Toggleable from './Toggleable'\r\nconst style = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n}\r\nconst Blog = ({ blog, addLike }) => (\r\n    <div style={ style }>\r\n        {blog.title}<br />{blog.author}\r\n        <Toggleable showLabel='view' hideLabel='close'>\r\n            {blog.url}<br />{blog.likes}\r\n            <button onClick={() => addLike(blog)}>like</button><br />\r\n        </Toggleable>\r\n    </div>\r\n)\r\n\r\nconst Blogs = ({ blogs, addLike }) => (\r\n    <div>\r\n        {blogs.map(blog =>\r\n            <Blog key={blog.id} blog={blog} addLike={ addLike }/>\r\n        )}\r\n    </div>\r\n)\r\n\r\nexport default Blogs\r\n","import React, { useState } from 'react'\r\n\r\nconst LoginForm = ({ handleLogin }) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const loginSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const newUser = {\r\n            username : username,\r\n            password : password\r\n        }\r\n        handleLogin(newUser)\r\n        setUsername('')\r\n        setPassword('')\r\n    }\r\n    return(\r\n        <div>\r\n            <h3>Login</h3>\r\n            <form onSubmit={ loginSubmit  }>\r\n                <div>\r\n        username\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        name=\"Username\"\r\n                        onChange={({ target }) => setUsername(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n        password\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\nconst Notification = ({ message, error }) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n    let style = {\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    if(error){\r\n        style['color'] = 'red'\r\n    }\r\n    else{\r\n        style['color'] = 'green'\r\n    }\r\n    return (\r\n        <div style={ style }>\r\n            { message }\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\nconst NewBlogForm = ({ handleNewForm }) => {\r\n    const [title, setTitle] = useState('')\r\n    const [url, setUrl] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n\r\n    const addNewForm = async (event) => {\r\n        event.preventDefault()\r\n        const newBlog = {\r\n            title : title,\r\n            url : url,\r\n            author : author,\r\n            likes: 0\r\n        }\r\n        await handleNewForm(newBlog)\r\n        setTitle('')\r\n        setAuthor('')\r\n        setUrl('')\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ addNewForm }>\r\n            title :\r\n            <input type='text' value={ title } onChange={({ target }) => setTitle(target.value)}></input><br />\r\n            author :\r\n            <input type='text' value={ author } onChange={({ target }) => setAuthor(target.value)}></input><br />\r\n            url :\r\n            <input type='text' value={ url } onChange={({ target }) => setUrl(target.value)}></input><br />\r\n            <button type='submit'>create</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewBlogForm","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token=null\r\n\r\nconst setToken = (newToken) => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (newBlog) => {\r\n    const config = {\r\n        headers : {\r\n            Authorization : token,\r\n        }\r\n    }\r\n    const response = await axios.post(baseUrl, newBlog, config)\r\n    return response.data\r\n}\r\n\r\nconst like = async (blog) => {\r\n    blog.likes = blog.likes+1\r\n    blog.user = blog.user.id\r\n    const response = await axios.put(`${baseUrl}/${blog.id}`, blog)\r\n    return response.data\r\n}\r\n\r\nexport default { getAll, setToken, create, like }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\r\nimport Blogs from './components/Blog'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\nimport Toggleable from './components/Toggleable'\r\nimport NewBlogFrom from './components/NewBlogForm'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n    const [blogs, setBlogs] = useState([])\r\n    const [user, setUser] = useState(null)\r\n    const [message, setMessage] = useState(null)\r\n    const [error, setError] = useState(false)\r\n\r\n    const newBlogRef = React.createRef()\r\n\r\n    const getBlogs = () => {\r\n        blogService\r\n            .getAll()\r\n            .then(blogs => setBlogs( blogs ))\r\n    }\r\n    useEffect(() => {\r\n        getBlogs()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('user')\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            blogService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    const setNotification = (message, error) => {\r\n        setError(error)\r\n        setMessage(message)\r\n        setTimeout(() => {\r\n            setMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const handleLogin = async (user) => {\r\n        try{\r\n\r\n            const loggedUser = await loginService.login(user)\r\n            setUser(loggedUser)\r\n            window.localStorage.setItem('user', JSON.stringify(loggedUser))\r\n            getBlogs()\r\n            setNotification('Successfully logged in', false)\r\n\r\n        } catch(error) {\r\n            console.error(error)\r\n            setNotification('Invalid username or password', true)\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        window.localStorage.removeItem('user')\r\n        setUser(null)\r\n        setNotification('Successfully logged out', false)\r\n    }\r\n\r\n    const loginForm = () => (\r\n        <LoginForm handleLogin={ handleLogin } />\r\n    )\r\n\r\n    const handleNewForm = async (newBlog) => {\r\n        try{\r\n            newBlogRef.current.toggleVisible()\r\n            await blogService.create(newBlog)\r\n            setNotification(`${newBlog.title} by ${newBlog.author} added`, false)\r\n        } catch(error) {\r\n            console.log(error)\r\n            setNotification('Note could not be added', true)\r\n        }\r\n        getBlogs()\r\n    }\r\n\r\n    const addLike = async (blog) => {\r\n        try{\r\n            let response = await blogService.like(blog)\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n        getBlogs()\r\n    }\r\n\r\n    const blogList = () => (\r\n        <div>\r\n            <h2>blogs</h2>\r\n            { user.name } is logged in\r\n            <button onClick={ logout }>logout</button>\r\n            <Toggleable showLabel='create new blog' hideLabel='cancel' ref={ newBlogRef }>\r\n                <h2>Create new</h2>\r\n                <NewBlogFrom handleNewForm={ handleNewForm } />\r\n            </Toggleable>\r\n            <Blogs blogs={ blogs } addLike={ addLike }/>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Notification message={ message } error={ error } />\r\n            { user === null ? loginForm() : blogList() }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}